{"name":"Taglib-rust","tagline":"TagLib bindings for Rust","body":"## TagLib-Rust  [![Build Status][trav-ci-img]][trav-ci]\r\n\r\nSimple bindings for TagLib in Rust\r\n\r\n## Overview\r\n\r\nTagLib-Rust is a library that allows accessing audio meta-data in Rust, by\r\nusing the TagLib library.\r\n\r\nTagLib-Rust supports reading and editing the meta-data of several popular\r\naudio formats. Currently there is support for:\r\n\r\n * ID3v1 and ID3v2 for MP3 files\r\n * Ogg Vorbis and FLAC\r\n * MPC\r\n * Speex\r\n * WavPack\r\n * TrueAudio\r\n * MP4\r\n * ASF\r\n\r\n### Requirements\r\n\r\nTagLib-Rust requires:\r\n\r\n * Rust 1.0\r\n * TagLib\r\n * the libc Rust module\r\n\r\nIt also optionally depends on the `pkg-config` Rust module to find the\r\nlocation of the TagLib library when building.\r\n\r\n### Using TagLib-Rust\r\n\r\nIf you're using [cargo][crates] to manage your project, you can download\r\nthrough Crates.io:\r\n\r\n```toml\r\n    [dependencies]\r\n    taglib = \"0.1.0\"\r\n```\r\n\r\nAlternatively, you can pull it from [GitHub][taglib-gh]:\r\n\r\n```rust\r\n    [dependencies.taglib]\r\n    git = \"https://github.com/ebassi/taglib-rust\"\r\n```\r\n\r\nOtherwise, clone [the Git repository][taglib-gh], and run [cargo][crates]:\r\n\r\n    $ cargo build\r\n\r\n### Examples\r\n\r\nTagLib-Rust comes with some examples on how to use it, see the `examples`\r\ndirectory in the [the Git repository][taglib-gh].\r\n\r\n## License\r\n\r\nTagLib-Rust is licensed under the terms of the Lesser General Public\r\nLicense version 2.1, or, at your option under the terms of the Mozilla\r\nPublic License version 1.1.\r\n\r\n * LGPL v2.1: http://www.gnu.org/licenses/\r\n * MPL 1.1: https://www.mozilla.org/MPL/1.1/index.txt\r\n\r\n[trav-ci-img]: https://travis-ci.org/ebassi/taglib-rust.png?branch=master\r\n[trav-ci]: https://travis-ci.org/ebassi/taglib-rust\r\n[crates]: http://crates.io/\r\n[taglib-gh]: https://github.com/ebassi/taglib-rust\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}